{
  "address": "0x16641341A60cB93D6255Ca64750fFa81e22DC3eb",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ubiToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "uniswapRouter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "ubiToken",
          "type": "address"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nativeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "UBIBurnedAmount",
          "type": "uint256"
        }
      ],
      "name": "SwapAndBurn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "UBI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Uniswap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approveUniSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapAndBurn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc84925fbb9796ca834f0b997d991beee8889a836723cdcee9402648a8b75e571",
  "receipt": {
    "to": null,
    "from": "0xF48a4A08C68F8438B33E784E967BAA7FD169b9f3",
    "contractAddress": "0x16641341A60cB93D6255Ca64750fFa81e22DC3eb",
    "transactionIndex": 26,
    "gasUsed": "470013",
    "logsBloom": "0x
    "blockHash": "0x6d26b3b5c8441471bd81d5215eb5a09ea96e28a644f92b7b6f1f5bbe79307ba4",
    "transactionHash": "0xc84925fbb9796ca834f0b997d991beee8889a836723cdcee9402648a8b75e571",
    "logs": [
      {
        "transactionIndex": 26,
        "blockNumber": 16692908,
        "transactionHash": "0xc84925fbb9796ca834f0b997d991beee8889a836723cdcee9402648a8b75e571",
        "address": "0x16641341A60cB93D6255Ca64750fFa81e22DC3eb",
        "topics": [
          "0x3cd5ec01b1ae7cfec6ca1863e2cd6aa25d6d1702825803ff2b7cc95010fffdc2",
          "0x0000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d",
          "0x000000000000000000000000dd1ad9a21ce722c151a836373babe42c868ce9a4"
        ],
        "data": "0x",
        "logIndex": 58,
        "blockHash": "0x6d26b3b5c8441471bd81d5215eb5a09ea96e28a644f92b7b6f1f5bbe79307ba4"
      }
    ],
    "blockNumber": 16692908,
    "cumulativeGasUsed": "2740341",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0xdd1ad9a21ce722c151a836373babe42c868ce9a4"
  ],
  "numDeployments": 1,
  "solcInputHash": "b7475f736797b003fbf552f18e9503d2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ubiToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"uniswapRouter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ubiToken\",\"type\":\"address\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nativeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"UBIBurnedAmount\",\"type\":\"uint256\"}],\"name\":\"SwapAndBurn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UBI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Uniswap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveUniSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAndBurn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Think and Dev\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_ubiToken\":\"address of UBI token\",\"_uniswapRouter\":\"address of Uniswap Router\"}}},\"stateVariables\":{\"UBI\":{\"details\":\"address of the UBI token\"},\"Uniswap\":{\"details\":\"address of the uniswap router\"}},\"title\":\"Canis Swap and Burn\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveUniSwap()\":{\"notice\":\"Approve UniswapRouter to take tokens\"},\"constructor\":{\"notice\":\"Init contract\"},\"swapAndBurn()\":{\"notice\":\"Swap ETH for UBI and Burn it\"}},\"notice\":\"contract that swaps native currency for UBI and burns it\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapBurner.sol\":\"SwapBurner\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SwapBurner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"./interfaces/IUniswapV2.sol\\\";\\nimport \\\"./interfaces/IUBI.sol\\\";\\n\\n/// @title Canis Swap and Burn\\n/// @notice contract that swaps native currency for UBI and burns it\\n/// @author Think and Dev\\ncontract SwapBurner {\\n    /// @dev address of the uniswap router\\n    address public immutable Uniswap;\\n    /// @dev address of the UBI token\\n    address public immutable UBI;\\n\\n    event Initialized(address indexed uniswapRouter, address indexed ubiToken);\\n    event SwapAndBurn(address indexed sender, uint256 nativeAmount, uint256 UBIBurnedAmount);\\n    event PaymentReceived(address from, uint256 amount);\\n\\n\\n    /// @notice Init contract\\n    /// @param _uniswapRouter address of Uniswap Router\\n    /// @param _ubiToken address of UBI token\\n    constructor(\\n        address _uniswapRouter,\\n        address _ubiToken\\n    ) {\\n        require(_uniswapRouter != address(0), \\\"Uniswap address can not be null\\\");\\n        require(_ubiToken != address(0), \\\"UBI address can not be null\\\");\\n        Uniswap = _uniswapRouter;\\n        UBI = _ubiToken;\\n        emit Initialized(Uniswap, UBI);\\n    }\\n\\n    /********** GETTERS ***********/\\n\\n    /********** SETTERS ***********/\\n\\n    /// @notice Approve UniswapRouter to take tokens\\n    function approveUniSwap() public {\\n        IUBI(UBI).approve(Uniswap, type(uint256).max);\\n    }\\n\\n    /********** INTERFACE ***********/\\n\\n    /// @notice Swap ETH for UBI and Burn it\\n    function swapAndBurn() external returns (uint256[] memory amounts) {\\n        address[] memory path = new address[](2);\\n        path[0] = IUniswapV2(Uniswap).WETH();\\n        path[1] = UBI;\\n\\n        uint256 ethBalance = address(this).balance;\\n        amounts = IUniswapV2(Uniswap).swapExactETHForTokens{value: ethBalance}(\\n            1,\\n            path,\\n            address(this),\\n            block.timestamp + 1\\n        );\\n        uint256 ubiAmount = IUBI(UBI).balanceOf(address(this));\\n        IUBI(UBI).burn(ubiAmount);\\n\\n        emit SwapAndBurn(msg.sender, ethBalance, ubiAmount);\\n    }\\n\\n    /**\\n     * @notice Receive function to allow to UniswapRouter to transfer dust eth and be recieved by contract.\\n     */\\n    receive() external payable {\\n        emit PaymentReceived(msg.sender, msg.value);\\n    }\\n}\\n\",\"keccak256\":\"0x313e59dd9471e8329e0ad6b7988681c5b31ee4aee645c54c8c350ff87a2e0323\",\"license\":\"MIT\"},\"contracts/interfaces/IUBI.sol\":{\"content\":\"//SPDX-License-Identifier: AGPL-3.0-or-later\\n\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title UBI Token\\n * @dev Simpler version of Uniswap v2 and v3 protocol interface\\n */\\ninterface IUBI {\\n    /**\\n     * @dev Calculates the current user accrued balance.\\n     * @param _human The submission ID.\\n     * @return The current balance including accrued Universal Basic Income of the user.\\n     **/\\n    function balanceOf(address _human) external view returns (uint256);\\n\\n    /** @dev Approves `_spender` to spend `_amount`.\\n     *  @param _spender The entity allowed to spend funds.\\n     *  @param _amount The amount of base units the entity will be allowed to spend.\\n     */\\n    function approve(address _spender, uint256 _amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /** @dev Burns `_amount` of tokens and withdraws accrued tokens.\\n     *  @param _amount The quantity of tokens to burn in base units.\\n     */\\n    function burn(uint256 _amount) external;\\n\\n    /** @dev Increases the `_spender` allowance by `_addedValue`.\\n     *  @param _spender The entity allowed to spend funds.\\n     *  @param _addedValue The amount of extra base units the entity will be allowed to spend.\\n     */\\n    function increaseAllowance(address _spender, uint256 _addedValue) external returns (bool);\\n\\n    /** @dev Decreases the `_spender` allowance by `_subtractedValue`.\\n     *  @param _spender The entity whose spending allocation will be reduced.\\n     *  @param _subtractedValue The reduction of spending allocation in base units.\\n     */\\n    function decreaseAllowance(address _spender, uint256 _subtractedValue) external returns (bool);\\n}\\n\",\"keccak256\":\"0x77bfa1831fb48671b816f0174dfa72325ddd54893c70b5709d670a0a185a3653\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/interfaces/IUniswapV2.sol\":{\"content\":\"//SPDX-License-Identifier: AGPL-3.0-or-later\\n\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title UniswapV2\\n * @dev Simpler version of Uniswap v2 and v3 protocol interface\\n */\\ninterface IUniswapV2 {\\n    //Uniswap V2\\n\\n    function WETH() external view returns (address);\\n\\n    // given an input amount of an asset and pair reserves, returns the maximum output amount of the other asset\\n    function getAmountsOut(uint256 amountIn, address[] memory path) external view returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0x68de69af3bbaefe94d94c28cbf346cbda49fe038e2b0f9f0cd80947480902e11\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161093d38038061093d83398101604081905261002f91610147565b6001600160a01b03821661008a5760405162461bcd60e51b815260206004820152601f60248201527f556e697377617020616464726573732063616e206e6f74206265206e756c6c0060448201526064015b60405180910390fd5b6001600160a01b0381166100e05760405162461bcd60e51b815260206004820152601b60248201527f55424920616464726573732063616e206e6f74206265206e756c6c00000000006044820152606401610081565b6001600160a01b03808316608081905290821660a08190526040519091907f3cd5ec01b1ae7cfec6ca1863e2cd6aa25d6d1702825803ff2b7cc95010fffdc290600090a3505061017a565b80516001600160a01b038116811461014257600080fd5b919050565b6000806040838503121561015a57600080fd5b6101638361012b565b91506101716020840161012b565b90509250929050565b60805160a05161076e6101cf6000396000818160db015281816102250152818161032e015281816103b2015261049e0152600081816101270152818161017001528181610271015261046e015261076e6000f3fe6080604052600436106100435760003560e01c8063030a5a7514610087578063172284df146100b25780637e613d59146100c95780639646384f1461011557600080fd5b3661008257604080513381523460208201527f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be770910160405180910390a1005b600080fd5b34801561009357600080fd5b5061009c610149565b6040516100a9919061050e565b60405180910390f35b3480156100be57600080fd5b506100c7610457565b005b3480156100d557600080fd5b506100fd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100a9565b34801561012157600080fd5b506100fd7f000000000000000000000000000000000000000000000000000000000000000081565b604080516002808252606080830184529260009291906020830190803683370190505090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f09190610568565b8160008151811061020357610203610598565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061025757610257610598565b6001600160a01b03928316602091820292909201015247907f000000000000000000000000000000000000000000000000000000000000000016637ff36ab582600185306102a542846105ae565b6040518663ffffffff1660e01b81526004016102c494939291906105d5565b60006040518083038185885af11580156102e2573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261030b919081019061063f565b6040516370a0823160e01b81523060048201529093506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039991906106fd565b604051630852cd8d60e31b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b1580156103fe57600080fd5b505af1158015610412573d6000803e3d6000fd5b505060408051858152602081018590523393507f5380c1db0d3a91b7820df3c466734766b2113aa6843e44d101f5bf2d5d87f0e292500160405180910390a250505090565b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156104e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050b9190610716565b50565b6020808252825182820181905260009190848201906040850190845b818110156105465783518352928401929184019160010161052a565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561057a57600080fd5b81516001600160a01b038116811461059157600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b808201808211156105cf57634e487b7160e01b600052601160045260246000fd5b92915050565b600060808201868352602060808185015281875180845260a086019150828901935060005b8181101561061f5784516001600160a01b0316835293830193918301916001016105fa565b50506001600160a01b039690961660408501525050506060015292915050565b6000602080838503121561065257600080fd5b825167ffffffffffffffff8082111561066a57600080fd5b818501915085601f83011261067e57600080fd5b81518181111561069057610690610552565b8060051b604051601f19603f830116810181811085821117156106b5576106b5610552565b6040529182528482019250838101850191888311156106d357600080fd5b938501935b828510156106f1578451845293850193928501926106d8565b98975050505050505050565b60006020828403121561070f57600080fd5b5051919050565b60006020828403121561072857600080fd5b8151801515811461059157600080fdfea2646970667358221220d281a6da21f44f356e86459a4620422e955509fefc396cec6e6340731266812e64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c8063030a5a7514610087578063172284df146100b25780637e613d59146100c95780639646384f1461011557600080fd5b3661008257604080513381523460208201527f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be770910160405180910390a1005b600080fd5b34801561009357600080fd5b5061009c610149565b6040516100a9919061050e565b60405180910390f35b3480156100be57600080fd5b506100c7610457565b005b3480156100d557600080fd5b506100fd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100a9565b34801561012157600080fd5b506100fd7f000000000000000000000000000000000000000000000000000000000000000081565b604080516002808252606080830184529260009291906020830190803683370190505090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f09190610568565b8160008151811061020357610203610598565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061025757610257610598565b6001600160a01b03928316602091820292909201015247907f000000000000000000000000000000000000000000000000000000000000000016637ff36ab582600185306102a542846105ae565b6040518663ffffffff1660e01b81526004016102c494939291906105d5565b60006040518083038185885af11580156102e2573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261030b919081019061063f565b6040516370a0823160e01b81523060048201529093506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039991906106fd565b604051630852cd8d60e31b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b1580156103fe57600080fd5b505af1158015610412573d6000803e3d6000fd5b505060408051858152602081018590523393507f5380c1db0d3a91b7820df3c466734766b2113aa6843e44d101f5bf2d5d87f0e292500160405180910390a250505090565b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156104e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050b9190610716565b50565b6020808252825182820181905260009190848201906040850190845b818110156105465783518352928401929184019160010161052a565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561057a57600080fd5b81516001600160a01b038116811461059157600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b808201808211156105cf57634e487b7160e01b600052601160045260246000fd5b92915050565b600060808201868352602060808185015281875180845260a086019150828901935060005b8181101561061f5784516001600160a01b0316835293830193918301916001016105fa565b50506001600160a01b039690961660408501525050506060015292915050565b6000602080838503121561065257600080fd5b825167ffffffffffffffff8082111561066a57600080fd5b818501915085601f83011261067e57600080fd5b81518181111561069057610690610552565b8060051b604051601f19603f830116810181811085821117156106b5576106b5610552565b6040529182528482019250838101850191888311156106d357600080fd5b938501935b828510156106f1578451845293850193928501926106d8565b98975050505050505050565b60006020828403121561070f57600080fd5b5051919050565b60006020828403121561072857600080fd5b8151801515811461059157600080fdfea2646970667358221220d281a6da21f44f356e86459a4620422e955509fefc396cec6e6340731266812e64736f6c63430008110033",
  "devdoc": {
    "author": "Think and Dev",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_ubiToken": "address of UBI token",
          "_uniswapRouter": "address of Uniswap Router"
        }
      }
    },
    "stateVariables": {
      "UBI": {
        "details": "address of the UBI token"
      },
      "Uniswap": {
        "details": "address of the uniswap router"
      }
    },
    "title": "Canis Swap and Burn",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approveUniSwap()": {
        "notice": "Approve UniswapRouter to take tokens"
      },
      "constructor": {
        "notice": "Init contract"
      },
      "swapAndBurn()": {
        "notice": "Swap ETH for UBI and Burn it"
      }
    },
    "notice": "contract that swaps native currency for UBI and burns it",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}